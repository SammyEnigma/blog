cmake_minimum_required(VERSION 3.20.1)

set(CMAKE_TOOLCHAIN_FILE "/usr/local/Cellar/vcpkg/2021.05.12/libexec/scripts/buildsystems/vcpkg.cmake")

project(blog VERSION 1.0
	DESCRIPTION "Vorbrodt's C++ Blog - Code Samples"
	HOMEPAGE_URL "https://vorbrodt.blog"
	LANGUAGES C CXX ASM)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_OSX_ARCHITECTURES "x86_64")

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake;/usr/local/lib/cmake;/usr/local/lib/cmake/llvm;/usr/local/share/cmake/Modules")

if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Default build type: Debug" FORCE)
endif()

find_package(TBB         CONFIG REQUIRED)
find_package(ParallelSTL CONFIG REQUIRED)
find_package(Boost       CONFIG REQUIRED COMPONENTS serialization stacktrace_basic filesystem system timer program_options)
find_package(Range-v3    CONFIG REQUIRED)
find_package(Catch2      CONFIG REQUIRED)
find_package(Hayai       CONFIG REQUIRED)
find_package(FMT         CONFIG REQUIRED)
find_package(cryptopp    CONFIG REQUIRED)

find_package(OpenSSL     MODULE REQUIRED)
find_package(MySQL       MODULE REQUIRED)
find_package(Soci        MODULE REQUIRED)
find_package(Threads     MODULE REQUIRED)
find_package(Protobuf    MODULE REQUIRED)
find_package(THRIFT      MODULE REQUIRED)
find_package(GRPC        MODULE REQUIRED)
find_package(LZ4         MODULE REQUIRED)
find_package(XMLRPC      MODULE REQUIRED)
find_package(CURL        MODULE REQUIRED)
find_package(CURLpp      MODULE REQUIRED)
find_package(BOTAN       MODULE REQUIRED)
find_package(WOLFSSL     MODULE REQUIRED)
find_package(benchmark   MODULE REQUIRED)

include_directories("/usr/local/include")
link_directories("/usr/local/lib")

set(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")
set(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")
set(MODULE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

add_compile_options(-Wall -Wpedantic)

set(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Ofast -march=native")

function(add_module name)
	add_custom_target(
		${name}
		COMMAND
			${CMAKE_CXX_COMPILER}
			${CMAKE_CXX_FLAGS}
			-std=c++20
			-fmodules
			-fbuiltin-module-map
			-fprebuilt-module-path=${CMAKE_CURRENT_SOURCE_DIR}
			-c ${CMAKE_CURRENT_SOURCE_DIR}/${ARGN}
			-Xclang -emit-module-interface
			-o ${CMAKE_CURRENT_SOURCE_DIR}/${name}.pcm
		BYPRODUCTS
			${CMAKE_CURRENT_SOURCE_DIR}/${name}.pcm
	)
	# TBB and ParallelSTL dependency is needed when building with
	# LLVM 13 compiled with PSTL support enabled... don't ask me why :(
	add_dependencies(${name} TBB::tbb pstl::ParallelSTL)
endfunction()

add_subdirectory(src)

# get_cmake_property(_variableNames VARIABLES)
# list (SORT _variableNames)
# foreach (_variableName ${_variableNames})
#	message(STATUS "${_variableName}=${${_variableName}}")
# endforeach()
